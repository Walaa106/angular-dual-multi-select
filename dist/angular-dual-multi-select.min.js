angular.module("DualMultiSelect",["TreeView"]).directive("dualmultiselect",["$q","$filter",function(e,t){return{restrict:"AE",scope:{inputModel:"=",ngModel:"=",outputAllInfo:"=",recursionCheck:"=",outputAllInfo:"=",outputDuplicate:"=",recursionExpand:"=",options:"="},controller:["$scope",function(t){function l(){var l=e.defer();return angular.isFunction(t.inputModel.then)?t.inputModel.then(function(e){l.resolve({data:e.data})}):l.resolve({data:t.inputModel}),l.promise.then(function(e){t.items=angular.copy(e.data);var l=n(t.items);t.rootMap=l.rootMap,t.helperArray=l.arr}),l.promise}function n(e){function l(e,a){if(angular.isArray(e))for(var i=0;i<e.length;i++){e[i].hasOwnProperty(t.valueProperty)||(e[i][t.valueProperty]=o++);var u={body:e[i],text:e[i][t.displayProperty],id:e[i][t.valueProperty]};r.push(u),a||n.push(u),e[i][t.childrenProperty]&&e[i][t.childrenProperty].length&&l(e[i][t.childrenProperty],e[i])}}var n=[],r=[];return l(e),{rootMap:n,arr:r}}var o=0;t.options=t.options||{},t.valueProperty=t.options.valueProperty||"id",t.displayProperty=t.options.displayProperty||"text",t.childrenProperty=t.options.childrenProperty||"children",t.labelSelected=t.options.labelSelected||"已选择的内容",t.labelAll=t.options.labelAll||"待选择内容",t.buttonCheckAll=t.options.buttonCheckAll||"全选",t.buttonDeselectAll=t.options.buttonDeselectAll||"全不选";var r={find:function(e,l){if(angular.isObject(l)){for(var n=0;n<e.length;n++)if(l.body[t.valueProperty]===e[n].body[t.valueProperty])return n;return-1}return e.indexOf(l)}};t.selectAll=function(){var e=[];angular.forEach(t.outputDuplicate?t.helperArray:t.rootMap,function(l){e.push(t.outputAllInfo?l:l.body[t.valueProperty])}),t.ngModel=0===e.length?void 0:e},t.deSelectAll=function(){t.ngModel=void 0},t.deSelect=function(e){var l=angular.copy(t.ngModel),n=e;t.outputAllInfo&&(n={body:{}},n.body[t.valueProperty]=e);var o=r.find(l,n);l.splice(o,1),t.ngModel=0===l.length?void 0:l},t.isShow=function(e){if(!angular.isArray(t.ngModel))return!1;var l;return t.outputAllInfo?(l={body:{}},l.body[t.valueProperty]=e):l=e,-1!==r.find(t.ngModel,l)},t.dataPasser=l()}],templateUrl:"angular-dual-multi-select.tpl"}}]),function(){"use strict";angular.module("DualMultiSelect").run(["$templateCache",function(e){e.put("angular-dual-multi-select.tpl",'<div class="dualmultiselect"> \n    <div class="row"> \n        <div class="col-lg-6 col-md-6 col-sm-6"> \n            <label>{{ labelAll }}</label> \n            <button type="button" class="btn btn-default btn-xs" ng-click="selectAll()"> {{buttonCheckAll}} </button> \n            <div class="search-wrap">\n                <input class="form-control input-sm" ng-model="searchLeft">\n            </div>\n            <div class="pool">\n                <tree-view\n                input-model="dataPasser"\n                ng-model="ngModel"\n                recursion-check="recursionCheck"\n                output-duplicate="outputDuplicate"\n                output-all-info="outputAllInfo"\n                recursion-expand="recursionExpand"\n                options="options"\n                transfer-data="true"\n                filter-model="searchLeft"></tree-view>\n            </div>\n        </div>\n        <div class="col-lg-6 col-md-6 col-sm-6"> \n            <label>{{ labelSelected }}</label> \n            <button type="button" class="btn btn-default btn-xs" ng-click="deSelectAll()"> {{buttonDeselectAll}} </button>\n            <div class="search-wrap">\n                <input class="form-control input-sm" ng-model="searchRight">\n            </div>\n            <div class="pool">\n                <ul>\n                    <li ng-repeat="item in helperArray | filter:searchRight" ng-show="isShow(item.id)"> \n                        <a ng-click="deSelect(item.id)">\n                            {{ item.text }}\n                        </a>\n                    </li>\n                </ul> \n            </div>\n        </div>\n    </div>\n</div>')}])}();