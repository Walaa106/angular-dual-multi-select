angular.module("TreeView",["RecursionHelper"]).directive("treeViewItem",["RecursionHelper",function(e){function t(e){function t(t){return e.helperObject[t[e.valueProperty]]}function n(e){var n=t(e);r(n),a(n)}function r(e){if(e.children)for(var n=0;n<e.children.length;n++)t(e.children[n]).checked=e.checked,r(t(e.children[n]))}function a(e){if(e.parent){for(var n=0,r=0;r<e.parent.children.length;r++)t(e.parent.children[r]).checked&&n++;t(e.parent).checked=n===e.parent.children.length,a(t(e.parent))}}e.getIcon=function(t){return t.children?e.helperObject[t[e.valueProperty]].expanded===!0?e.iconExpand:e.iconCollapse:e.iconLeaf},e.toggleExpanded=function(t,n){e.helperObject[t[e.valueProperty]].expanded=!e.isExpanded(t),n.stopPropagation()},e.isExpanded=function(t){return e.helperObject[t[e.valueProperty]].expanded},e.isChecked=function(t){return e.helperObject[t[e.valueProperty]].checked},e.toggleChecked=function(t){e.helperObject[t[e.valueProperty]].checked=!e.isChecked(t),n(t)},e.isFiltered=function(e){return t(e).filtered!==!1}}return{replace:!0,scope:{datas:"=",valueProperty:"@",displayProperty:"@",iconLeaf:"@",iconExpand:"@",iconCollapse:"@",helperObject:"="},templateUrl:"angular-tree-view-item.tpl",compile:function(n){return e.compile(n,t)}}}]),angular.module("TreeView").directive("treeView",["RecursionHelper","$q","$filter",function(e,t,n){function r(e,n){e.displayProperty=e.displayProperty||"text",e.valueProperty=e.valueProperty||"id",e.childrenProperty=e.childrenProperty||"children",e.iconLeaf=e.iconLeaf||"glyphicon glyphicon-file fa fa-file",e.iconExpand=e.iconExpand||"glyphicon glyphicon-minus fa fa-minus",e.iconCollapse=e.iconCollapse||"glyphicon glyphicon-plus fa fa-plus";var r={arrayMinus:function(e,t){for(var e=e||[],t=t||[],n=[],r=0;r<e.length;r++)-1===t.indexOf(e[r])&&n.push(e[r]);return n}},i={status:"pending",init:function(){n.addClass("tree-view"),this.bindEvents(),this.refreshDatas()},refreshDatas:function(){var t=this;this.initDatas().then(function(n){e.showDatas=angular.copy(n);var r=t.createHelpers(e.showDatas);e.helperObject=r.obj,e.helperArray=r.arr,t.updateHelperByInput(),t.status="success"})},initDatas:function(){var n=t.defer();return angular.isFunction(e.datas.then)?e.datas.then(function(e){n.resolve(e)}):n.resolve(e.datas),n.promise},updateHelperByInput:function(t,n){var r=this;t?(n.forEach(function(e){r.changeStateById(e,!1)}),t.forEach(function(e){r.changeStateById(e,!0)})):angular.forEach(e.ngModel,function(e){r.changeStateById(e,!0)})},changeStateById:function(t,n){e.helperObject[t].checked=n,this.calculateChecked(e.helperObject[t].body),n&&this.expandUp(t)},bindEvents:function(){var t=this;e.$watch(function(){var t=0;return angular.forEach(e.helperObject,function(e){e.checked&&t++}),t},function(n,r){if(n!==r){var a=[];angular.forEach(e.helperObject,function(t){t.checked&&a.push(t.body[e.valueProperty])}),a=t.deleteDuplicated(a),e.ngModel=0===a.length?void 0:a}}),e.$watch("ngModel",function(e,n){if(e!==n&&"success"===t.status){var a=r.arrayMinus(n,e),i=r.arrayMinus(e,n);t.updateHelperByInput(i,a)}}),e.$watch("filterModel",function(n,r){if(n!==r&&"success"===t.status){angular.forEach(e.helperObject,function(e,t){e.filtered=!1});var i=a.filter(e.helperArray,{text:n});i.forEach(function(e){t.getHelper(e.id).filtered=!0,t.filterUp(e.id),t.expandUp(e.id)})}})},filterUp:function(e){var t=this.getHelper(e);if(t.parent){var n=this.getParentId(e);this.getHelper(n).filtered=!0,this.filterUp(n)}},expandUp:function(e){var t=this.getHelper(e);t.parent&&(this.getHelper(t.parent).expanded=!0,this.expandUp(this.getParentId(e)))},collapseDown:function(t){var n=this.getHelper(t);if(n.expanded=!1,n.children)for(var r=0;r<n.children.length;r++)this.collapseDown(n.children[r][e.valueProperty])},deleteDuplicated:function(e){for(var t=[],n=0;n<e.length;n++){var a=this.getParentId(e[n]);a&&this.contains(e,a)&&t.push(e[n])}return r.arrayMinus(e,t)},calculateChecked:function(e){var t=this.getHelper(e);this.calculateDown(t),this.calculateUp(t)},calculateDown:function(e){if(e.children)for(var t=0;t<e.children.length;t++)this.getHelper(e.children[t]).checked=e.checked,this.calculateDown(this.getHelper(e.children[t]))},calculateUp:function(e){if(e.parent){for(var t=0,n=0;n<e.parent.children.length;n++)this.getHelper(e.parent.children[n]).checked&&t++;this.getHelper(e.parent).checked=t===e.parent.children.length,this.calculateUp(this.getHelper(e.parent))}},getParentId:function(t){var n=this.getHelper(t);return n.parent?this.getHelper(n.parent).body[e.valueProperty]:!1},getHelper:function(t){var n=t;return angular.isObject(t)&&(n=t[e.valueProperty]),e.helperObject[n]},contains:function(e,t){return-1!==e.indexOf(t)},createHelpers:function(t){function n(t,i){if(angular.isArray(t))for(var l=0;l<t.length;l++)r[t[l][e.valueProperty]]={body:t[l],parent:i,children:t[l][e.childrenProperty]},a.push({text:t[l][e.displayProperty],id:t[l][e.valueProperty]}),t[l][e.childrenProperty]&&n(t[l][e.childrenProperty],t[l])}var r={},a=[];return n(t),{obj:r,arr:a}}};i.init()}var a={filter:n("filter")};return{templateUrl:"angular-tree-view.tpl",scope:{datas:"=inputModel",ngModel:"=",filterModel:"=",valueProperty:"@",displayProperty:"@",childrenProperty:"@",iconLeaf:"@",iconCollapse:"@",iconExpand:"@"},link:r}}]),function(){"use strict";angular.module("TreeView").run(["$templateCache",function(e){e.put("angular-tree-view-item.tpl",'<ul class="tree-view-group">\n	<li ng-repeat="data in datas" ng-class="{expanded: isExpanded(data)}" ng-show="isFiltered(data)">\n		<a ng-class="{checked: isChecked(data)}" ng-click="toggleChecked(data, $event)">\n			<span ng-class="getIcon(data)" ng-click="toggleExpanded(data, $event)"></span>\n			{{ data[displayProperty] }}\n		</a>\n		<tree-view-item\n		ng-if="data.children" \n		datas="data.children" \n		value-property="{{ valueProperty }}"\n		display-property="{{ displayProperty }}"\n		icon-leaf="{{ iconLeaf }}"\n		icon-expand="{{ iconExpand }}"\n		icon-collapse="{{ iconCollapse }}"\n		helper-object="helperObject"\n		></tree-view-item>\n	</li>\n</ul>'),e.put("angular-tree-view.tpl",'<tree-view-item \n	datas="showDatas" \n	value-property="{{ valueProperty }}"\n	display-property="{{ displayProperty }}"\n	icon-leaf="{{ iconLeaf }}"\n	icon-expand="{{ iconExpand }}"\n	icon-collapse="{{ iconCollapse }}"\n	helper-object="helperObject"\n	></tree-view-item>')}])}();